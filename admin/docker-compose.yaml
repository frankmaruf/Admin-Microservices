version: "3.9"
services:
  frontend:
    networks:
      - app
    container_name: admin_frontend
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    environment:
      - CHOKIDAR_USEPOLLING=true
      # - WDS_SOCKET_PORT=0
    tty: true
    ports:
      - 7070:3000
    volumes:
      - ./react-frontend:/app/frontend
      # - "/react-frontend/node_modules"
    depends_on:
      - backend
      - redis
  influencer:
    networks:
      - app
    container_name: influencer_api
    build:
      context: ./influencer
      dockerfile: Dockerfile
    tty: true
    environment:
      DB_HOST: db
      DB_DATABASE: influencer
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_PORT: 3306
      REDIS_HOST: redis
    ports:
      - 8070:8070
    volumes:
      - ./influencer:/app/influencer
    depends_on:
      - idb
      - redis
  
  db:
    networks:
      - app
    image: mysql:5.7.22
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: influencer
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - .dbdata:/var/lib/mysql
    ports:
      - 33066:3306
networks:
  app:
    external: true